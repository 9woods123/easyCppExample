// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "example.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* AddRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_example_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_example_2eproto() {
  protobuf_AddDesc_example_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "example.proto");
  GOOGLE_CHECK(file != NULL);
  AddRequest_descriptor_ = file->message_type(0);
  static const int AddRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, num1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, num2_),
  };
  AddRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddRequest_descriptor_,
      AddRequest::default_instance_,
      AddRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, _is_default_instance_));
  AddResponse_descriptor_ = file->message_type(1);
  static const int AddResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddResponse, result_),
  };
  AddResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddResponse_descriptor_,
      AddResponse::default_instance_,
      AddResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_example_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddRequest_descriptor_, &AddRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddResponse_descriptor_, &AddResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_example_2eproto() {
  delete AddRequest::default_instance_;
  delete AddRequest_reflection_;
  delete AddResponse::default_instance_;
  delete AddResponse_reflection_;
}

void protobuf_AddDesc_example_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_example_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rexample.proto\"(\n\nAddRequest\022\014\n\004num1\030\001 "
    "\001(\005\022\014\n\004num2\030\002 \001(\005\"\035\n\013AddResponse\022\016\n\006resu"
    "lt\030\001 \001(\00529\n\016ExampleService\022\'\n\nAddNumbers"
    "\022\013.AddRequest\032\014.AddResponseb\006proto3", 155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "example.proto", &protobuf_RegisterTypes);
  AddRequest::default_instance_ = new AddRequest();
  AddResponse::default_instance_ = new AddResponse();
  AddRequest::default_instance_->InitAsDefaultInstance();
  AddResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_example_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_example_2eproto {
  StaticDescriptorInitializer_example_2eproto() {
    protobuf_AddDesc_example_2eproto();
  }
} static_descriptor_initializer_example_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRequest::kNum1FieldNumber;
const int AddRequest::kNum2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRequest::AddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddRequest)
}

void AddRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddRequest::AddRequest(const AddRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AddRequest)
}

void AddRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  num1_ = 0;
  num2_ = 0;
}

AddRequest::~AddRequest() {
  // @@protoc_insertion_point(destructor:AddRequest)
  SharedDtor();
}

void AddRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddRequest_descriptor_;
}

const AddRequest& AddRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

AddRequest* AddRequest::default_instance_ = NULL;

AddRequest* AddRequest::New(::google::protobuf::Arena* arena) const {
  AddRequest* n = new AddRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AddRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AddRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AddRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(num1_, num2_);

#undef ZR_HELPER_
#undef ZR_

}

bool AddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num2;
        break;
      }

      // optional int32 num2 = 2;
      case 2: {
        if (tag == 16) {
         parse_num2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddRequest)
  return false;
#undef DO_
}

void AddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddRequest)
  // optional int32 num1 = 1;
  if (this->num1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num1(), output);
  }

  // optional int32 num2 = 2;
  if (this->num2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num2(), output);
  }

  // @@protoc_insertion_point(serialize_end:AddRequest)
}

::google::protobuf::uint8* AddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AddRequest)
  // optional int32 num1 = 1;
  if (this->num1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num1(), target);
  }

  // optional int32 num2 = 2;
  if (this->num2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AddRequest)
  return target;
}

int AddRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AddRequest)
  int total_size = 0;

  // optional int32 num1 = 1;
  if (this->num1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num1());
  }

  // optional int32 num2 = 2;
  if (this->num2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddRequest)
    MergeFrom(*source);
  }
}

void AddRequest::MergeFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.num1() != 0) {
    set_num1(from.num1());
  }
  if (from.num2() != 0) {
    set_num2(from.num2());
  }
}

void AddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRequest::CopyFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRequest::IsInitialized() const {

  return true;
}

void AddRequest::Swap(AddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRequest::InternalSwap(AddRequest* other) {
  std::swap(num1_, other->num1_);
  std::swap(num2_, other->num2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddRequest_descriptor_;
  metadata.reflection = AddRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRequest

// optional int32 num1 = 1;
void AddRequest::clear_num1() {
  num1_ = 0;
}
 ::google::protobuf::int32 AddRequest::num1() const {
  // @@protoc_insertion_point(field_get:AddRequest.num1)
  return num1_;
}
 void AddRequest::set_num1(::google::protobuf::int32 value) {
  
  num1_ = value;
  // @@protoc_insertion_point(field_set:AddRequest.num1)
}

// optional int32 num2 = 2;
void AddRequest::clear_num2() {
  num2_ = 0;
}
 ::google::protobuf::int32 AddRequest::num2() const {
  // @@protoc_insertion_point(field_get:AddRequest.num2)
  return num2_;
}
 void AddRequest::set_num2(::google::protobuf::int32 value) {
  
  num2_ = value;
  // @@protoc_insertion_point(field_set:AddRequest.num2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddResponse::AddResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddResponse)
}

void AddResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddResponse::AddResponse(const AddResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AddResponse)
}

void AddResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
}

AddResponse::~AddResponse() {
  // @@protoc_insertion_point(destructor:AddResponse)
  SharedDtor();
}

void AddResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddResponse_descriptor_;
}

const AddResponse& AddResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

AddResponse* AddResponse::default_instance_ = NULL;

AddResponse* AddResponse::New(::google::protobuf::Arena* arena) const {
  AddResponse* n = new AddResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AddResponse)
  result_ = 0;
}

bool AddResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddResponse)
  return false;
#undef DO_
}

void AddResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:AddResponse)
}

::google::protobuf::uint8* AddResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AddResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AddResponse)
  return target;
}

int AddResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AddResponse)
  int total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddResponse)
    MergeFrom(*source);
  }
}

void AddResponse::MergeFrom(const AddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void AddResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResponse::CopyFrom(const AddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResponse::IsInitialized() const {

  return true;
}

void AddResponse::Swap(AddResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddResponse::InternalSwap(AddResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddResponse_descriptor_;
  metadata.reflection = AddResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddResponse

// optional int32 result = 1;
void AddResponse::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 AddResponse::result() const {
  // @@protoc_insertion_point(field_get:AddResponse.result)
  return result_;
}
 void AddResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:AddResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
